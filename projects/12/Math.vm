function Math.init 0
push constant 0
return
function Math.abs 0
push argument 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
neg
pop argument 0
label IF_FALSE0
push argument 0
return
function Math.multiply 2
push argument 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
neg
push argument 1
call Math.multiply 2
neg
return
label IF_FALSE0
push argument 1
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
push argument 1
neg
call Math.multiply 2
neg
return
label IF_FALSE1
push constant 0
pop local 0
label WHILE_EXP0
push argument 0
push constant 0
gt
not
if-goto WHILE_END0
push local 0
push argument 1
add
pop local 0
push argument 0
push constant 1
sub
pop argument 0
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Math.divide 1
push argument 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
neg
push argument 1
call Math.divide 2
neg
return
label IF_FALSE0
push argument 1
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
push argument 1
neg
call Math.divide 2
neg
return
label IF_FALSE1
push constant 0
pop local 0
label WHILE_EXP0
push argument 0
push argument 1
gt
push argument 0
push argument 1
eq
or
not
if-goto WHILE_END0
push local 0
push constant 1
add
pop local 0
push argument 0
push argument 1
sub
pop argument 0
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function Math.sqrt 2
push constant 1
pop local 0
label WHILE_EXP0
push local 0
push constant 181
lt
not
if-goto WHILE_END0
push local 0
push local 0
call Math.multiply 2
pop local 1
push local 1
push argument 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 1
sub
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 181
return
function Math.max 0
push argument 0
push argument 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
return
label IF_FALSE0
push argument 1
return
function Math.min 0
push argument 0
push argument 1
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
return
label IF_FALSE0
push argument 1
return
